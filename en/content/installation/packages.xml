<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="installation-of-prepared-packages">
<title>The Simple Way - Installation of Pre-Built Packages</title>

<para>
    If available for your platform you should use pre-built packages to install OTRS, since it is the simplest and most convenient method.
    You can find them in the download area at <ulink url="https://www.otrs.com/download-open-source-help-desk-software-otrs-free/">www.otrs.com</ulink>.
    The following sections describe the installation of OTRS with a pre-built or binary package on SUSE and Red Hat systems.
    Only if you are unable to use the pre-built packages for some reason should you follow the manual process.
</para>

<section id="installation-on-suse">
    <title>Installing the RPM on a SUSE Linux server</title>

    <para>
    This section describes the installation of our RPM package on a SUSE Linux server.
    </para>

    <section id="suse-preparing-database-mysql">
    <title>Preparing the database for OTRS</title>

    <para>
    You can use OTRS using different database back-ends: <application>MySQL</application>, <application>PostgreSQL</application> or <application>Oracle</application>. The most popular database to deploy OTRS on is MySQL.
    This chapter shows the steps you need to take to configure MySQL on a SUSE-based server. Of course you can install the database on a dedicated database
    server if needed for scalability or other purposes.
    </para>
    <note>
        <para>
            If you follow this chapter on openSUSE 12.3 and up you'll actually not install <application>MySQL</application> but <application>MariaDB</application> instead, a MySQL
            compatible fork of the MySQL code. This is no problem, it will work just as well (and even a little better at some points).
        </para>
    </note>
    <para>
        Install MySQL by executing the following command as root:
    </para>

    <para>
        <screen><![CDATA[
linux:~ # zypper install mysql perl-DBD-mysql
        ]]></screen>
    </para>

    <para>
        This will install MySQL with the default options on your system. You'll need to change the defaults in order
        to make it suitable for OTRS. With a text editor open the file <filename>/etc/my.cnf</filename> and add
        following lines under the [mysqld] section:
    </para>

    <para>
        <screen><![CDATA[
max_allowed_packet   = 20M
query_cache_size     = 32M
innodb_log_file_size = 256M
        ]]></screen>
    </para>

    <para>
        Now execute <command>systemctl restart mysql.service</command> to re-start the database server and activate these changes. Then run
        <command>/usr/bin/mysql_secure_installation</command> and follow the on-screen instructions to set a database root
        password, remove anonymous access and remove the test database. Lastly, run <command>systemctl enable mysql.service</command>
        in order to make sure MySQL is automatically started at server startup time.
    </para>

    </section>

    <section id="suse-installing-rpm">
        <title>Installing OTRS</title>
    <para>
    Install OTRS with via the command line using <command>zypper</command>. This will also pull in some dependencies such as
    the Apache web server and some Perl modules. Make sure you copied the OTRS RPM file to the current directory.
    </para>
    <para>
        <screen><![CDATA[
otrs-sles:~ # zypper install otrs*.rpm
....
Retrieving package otrs-x.x.x-01.noarch (1/26), 17.5 MiB (74.3 MiB unpacked)
Installing: otrs-x.x.x-01 [done]
Additional rpm output:
Check OTRS user ... otrs added.

...

otrs-sles:~ #
        ]]></screen>
    </para>

    <para>
        Now restart Apache with the command <command>systemctl restart apache2.service</command> to load
        the configuration changes for OTRS.
    </para>
    </section>

    <section id="suse-installation-perl-modules">
        <title>Installation of additional perl modules</title>
        <para>OTRS needs more modules than can be installed via the package manager per default. You can post-install them manually. Running the 
		      <filename>otrs.CheckModules.pl</filename> script located per default under <filename>/opt/otrs/bin/</filename> will let you know
			  which modules are missing, and must or can be installed.
            Optional modules may include those needed for communication with MDAs via IMAP(S) or gernerating PDF output.
            On SLES you must/may add an external repository in order to get missing modules. 
            Choose the repository needed for your OS version from here: <ulink url="http://download.opensuse.org/repositories/devel:/languages:/perl/">http://download.opensuse.org/repositories/devel:/languages:/perl/</ulink>. The repository for SLES 11 SP 3 would be added like this:
        </para>

    <note>
        <para>
            If the mentioned version is no longer available in the online repository, you may need to use another URL then mentioned below.
	    </para>
    </note>

        <para>
            <screen><![CDATA[
zypper ar -f -n perl http://download.opensuse.org/repositories/devel:/languages:/perl/SLE_11_SP3 Perl
            ]]></screen>
        </para>

        <para>
            On openSUSE 12.3 the extra repository is only needed for the Mail::IMAPClient module, which you'd only need if you need to collect mails
            from an IMAP server secured with TLS. The corresponding line would look like this:
        </para>

        <para>
            <screen><![CDATA[
zypper ar -f -n perl http://download.opensuse.org/repositories/devel:/languages:/perl/openSUSE_12.3/ Perl
            ]]></screen>
        </para>
        <para>
            The first time you use zypper after you added this repository, you will be prompted to add its key. Now you can install missing modules like below.
        </para>
        <para>
            <screen><![CDATA[
otrs-sles:/opt/otrs # zypper install -y "perl(YAML::LibYAML)"
Refreshing service 'susecloud'.
Retrieving repository 'perl' metadata [\]

New repository or package signing key received:
Key ID: DCCA98DDDCEF338C
Key Name: devel:languages:perl OBS Project &lt;devel:languages:perl@build.opensuse.org&gt;
Key Fingerprint: 36F0AC0BCA9D8AF2871703C5DCCA98DDDCEF338C
Key Created: Wed Oct 10 22:04:18 2012
Key Expires: Fri Dec 19 22:04:18 2014
Repository: perl

Do you want to reject the key, trust temporarily, or trust always? [r/t/a/?] (r): a
Retrieving repository 'perl' metadata [done]
Building repository 'perl' cache [done]
Loading repository data...
Reading installed packages...
'perl(YAML::LibYAML)' not found in package names. Trying capabilities.
Resolving package dependencies...

The following NEW package is going to be installed:
  perl-YAML-LibYAML

The following package is not supported by its vendor:
  perl-YAML-LibYAML

Retrieving package perl-YAML-LibYAML-0.38-12.4.x86_64 (1/1), 75.0 KiB (196.0 KiB unpacked)
Retrieving: perl-YAML-LibYAML-0.38-12.4.x86_64.rpm [done (55.7 KiB/s)]
Installing: perl-YAML-LibYAML-0.38-12.4 [done]
            ]]></screen>
        </para>

        <para>
        The next step is to configure OTRS using the web installer, as described <link linkend="web-installer">in this section</link>.
        </para>

        <para>
            Now you can start the OTRS daemon and activate corresponding watchdog cron job (this must be done by the
            <literal>otrs</literal> user):
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>

        <para>
            That's it, congratulations!
        </para>

    </section>

</section>

<section id="installation-on-centos">
    <title>Installing OTRS on a Red Hat Enterprise Linux or CentOS system</title>

    <para>
    This section describes the installation of our RPM package on a Red Hat Enterprise Linux (RHEL) or CentOS server. For OTRS 3.3 and up, RHEL 6 or CentOS 6 is a requirement, version 5 is not supported.
    </para>

    <section id="rhel-preparing-database-mysql">
    <title>Preparing the database for OTRS</title>

    <para>
    You can use OTRS using different database back-ends: <application>MySQL</application>, <application>PostgreSQL</application> or <application>Oracle</application>. The most popular database to deploy OTRS on is MySQL.
    This chapter shows the steps you need to take to configure MySQL on a RHEL-based server.
    Of course you can install the database on a dedicated database server if needed for scalability or other purposes.
    </para>

    <para>
        Install MySQL by executing the following command as root:
    </para>

    <para>
        <screen><![CDATA[
[root@otrs-centos6 ~]# yum -y install mysql-server
        ]]></screen>
    </para>

    <para>
        This will install MySQL with the default options on your system. You'll need to change the defaults in order to make it suitable for OTRS. With a text
        editor open the file <filename>/etc/my.cnf</filename> and add following lines under the [mysqld] section:
    </para>

    <para>
        <screen><![CDATA[
max_allowed_packet   = 20M
query_cache_size     = 32M
innodb_log_file_size = 256M
        ]]></screen>
    </para>

    <para>
        Now execute <command>systemctl start mysqld</command> to re-start the database server and activate these changes. Then run
        <command>/usr/bin/mysql_secure_installation</command> and follow the on-screen instructions to set a database root
        password, remove anonymous access and remove the test database.
    </para>

    </section>

    <section id="rhel-installing-rpm">
        <title>Installing OTRS</title>
    <para>
    Install OTRS with via the command line using <command>yum</command>. This will also pull in some dependencies such as
    the Apache web server and some Perl modules. Make sure you copied the OTRS RPM file to the current directory.
    </para>
    <para>
        <screen><![CDATA[
[root@otrs-centos6 ~]# yum install --nogpgcheck otrs-x.x.*.rpm
...
Dependencies Resolved

================================================================================
 Package                    Arch   Version                Repository       Size
================================================================================
Installing:
 otrs                       noarch x.x.x-01               /otrs-x.x.x-01.noarch
                                                                           74 M
Installing for dependencies:
 apr                        x86_64 1.3.9-5.el6_2          updates         123 k
 ...
 procmail                   x86_64 3.22-25.1.el6          base            163 k

Transaction Summary
================================================================================
Install      26 Package(s)

Total size: 80 M
Total download size: 6.0 M
Installed size: 88 M
Downloading Packages:
(1/25): apr-1.3.9-5.el6_2.x86_64.rpm                     | 123 kB     00:00
...
(25/25): procmail-3.22-25.1.el6.x86_64.rpm               | 163 kB     00:00
--------------------------------------------------------------------------------
Total                                           887 kB/s | 6.0 MB     00:06
Running rpm_check_debug
Running Transaction Test
Transaction Test Succeeded
Running Transaction
  Installing : apr-1.3.9-5.el6_2.x86_64                               1/26
  ...
  Installing : otrs-x.x.x-01.noarch                                   26/26
Check OTRS user ... otrs added.

...

[root@otrs-centos6 ~]#
        ]]></screen>
    </para>

    <para>
        Now restart Apache with the command <command>systemctl restart httpd.service</command> to load
        the configuration changes for OTRS.
    </para>
    </section>

    <section id="rhel-installation-perl-modules">
        <title>Installation of additional perl modules</title>
        <para>OTRS needs some more modules than can be installed by the RPM. You can post-install them manually. You can check what modules you are
            missing by running the <filename>bin/otrs.CheckModules.pl</filename> script located in the <filename>/opt/otrs</filename> directory.
            Some modules are only needed for optional functionality, such as communication with IMAP(S) servers or PDF generation.
            On Red Hat or CentOS we recommend installing these modules from the EPEL repository, a repository maintained by the Fedora project,
            which provides high quality packages for RHEL and derivatives. Check for more information <ulink url="http://fedoraproject.org/wiki/EPEL">the EPEL web site</ulink>.
        </para>

        <para>
            If you're on RHEL 6 or CentOS 6, you can get the latest package for EPEL from
            <ulink url="https://download.fedoraproject.org/pub/epel/6/i386/">this site</ulink>.
            You can add this repository to yum it in one go by copying the RPM URL you find on this page and executing this command:
        </para>

        <para>
            <screen><![CDATA[
[root@otrs-centos6 otrs]# yum -y install http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
Loaded plugins: security
Setting up Install Process
epel-release-6-8.noarch.rpm                                   |  14 kB     00:00
Examining /var/tmp/yum-root-7jrJef/epel-release-6-8.noarch.rpm: epel-release-6-8.noarch
Marking /var/tmp/yum-root-7jrJef/epel-release-6-8.noarch.rpm to be installed
Resolving Dependencies
--> Running transaction check
---> Package epel-release.noarch 0:6-8 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================
 Package             Arch          Version     Repository                       Size
=====================================================================================
Installing:
 epel-release        noarch        6-8         /epel-release-6-8.noarch         22 k

Transaction Summary
=====================================================================================
Install       1 Package(s)

Total size: 22 k
Installed size: 22 k
Downloading Packages:
Running rpm_check_debug
Running Transaction Test
Transaction Test Succeeded
Running Transaction
  Installing : epel-release-6-8.noarch                                           1/1
  Verifying  : epel-release-6-8.noarch                                           1/1

Installed:
  epel-release.noarch 0:6-8

Complete!
[root@otrs-centos6 otrs]#
            ]]></screen>
        </para>
        <para>
            The first time you use yum after you added this repository, you will be prompted to add its key. Now you can install missing modules like below.
        </para>
        <para>
            <screen><![CDATA[
[root@otrs-centos6 otrs]# yum -y install "perl(Text::CSV_XS)"
Loaded plugins: security
Setting up Install Process
Resolving Dependencies
--> Running transaction check
---> Package perl-Text-CSV_XS.x86_64 0:0.85-1.el6 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

=====================================================================================
 Package                   Arch            Version               Repository     Size
=====================================================================================
Installing:
 perl-Text-CSV_XS          x86_64          0.85-1.el6            epel           71 k

Transaction Summary
=====================================================================================
Install       1 Package(s)

Total download size: 71 k
Installed size: 154 k
Downloading Packages:
perl-Text-CSV_XS-0.85-1.el6.x86_64.rpm                        |  71 kB     00:00
warning: rpmts_HdrFromFdno: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY
Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
Importing GPG key 0x0608B895:
 Userid : EPEL (6) &lt;epel@fedoraproject.org&gt;
 Package: epel-release-6-8.noarch (@/epel-release-6-8.noarch)
 From   : /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
Is this ok [y/N]: y
Running rpm_check_debug
Running Transaction Test
Transaction Test Succeeded
Running Transaction
  Installing : perl-Text-CSV_XS-0.85-1.el6.x86_64                                1/1
  Verifying  : perl-Text-CSV_XS-0.85-1.el6.x86_64                                1/1

Installed:
  perl-Text-CSV_XS.x86_64 0:0.85-1.el6

Complete!
[root@otrs-centos6 otrs]#
            ]]></screen>
        </para>

        <para>
        The next step is to configure OTRS using the web installer, as described <link linkend="web-installer">in this section</link>.
        </para>

        <para>
            Now you can start the OTRS daemon and activate corresponding watchdog cron job (this must be done by the
            <literal>otrs</literal> user):
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>

        <para>
            That's it, congratulations!
        </para>
    </section>

    <section id="rhel-installation-dbd-oracle">
        <title>Installation of Oracle database driver on Red Hat / CentOS</title>
        <para>
            If you want to deploy OTRS on an Oracle database, you'll need to compile and install the <application>DBD::Oracle</application>
            database driver. This is slightly more complicated than installing any of the other packages; this is because Oracle is a
            proprietary database and Red Hat nor the CentOS project are allowed to distribute drivers in their RPM repositories.
        </para>
        <para>
            First of all, we'd need to install <application>gcc</application>, <application>make</application> and <application>CPAN</application>
            so we can compile and install the driver. Below you see the command on CentOS; on other versions it might look a little different.
        </para>

        <para>
            <screen><![CDATA[
[root@otrs-centos6 otrs]# yum -y install gcc make "perl(CPAN)"
            ]]></screen>
        </para>

        <para>
            The next step is to obtain and install the database client. For this you would need to sign up for a free account at the Oracle website.
            You can download the drivers from this page: <ulink url="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html">
    http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html</ulink>
            Please choose the Linux x86 or x86-64 version corresponding to the architecture of your system. You can check this with the <command>uname -i</command>.
            It is either 'x86_64' for x86-64 or 'i386' for x86.
            You should download the packages
            'Instant Client Package - Basic', 'Instant Client Package - SQL*Plus', and 'Instant Client Package - SDK'. Save them to a location on your disk.
            Now as the root user you can install the packages using the following command:
        </para>
        <para>
            <screen><![CDATA[
[root@otrs-centos6 otrs]# yum install oracle-instantclient*
            ]]></screen>
        </para>
        <para>
            After this you should set two environment variables and compile the DBD::Oracle driver. Again, perform these tasks as the root user. The steps are
            outlined below. Please note that for briefness some lines outputted by the commands have been removed.
        </para>
        <para>
            <screen><![CDATA[
[root@otrs-centos6 otrs]# export ORACLE_HOME=/usr/lib/oracle/11.2/client64
[root@otrs-centos6 otrs]# export LD_LIBRARY_PATH=$ORACLE_HOME/lib
[root@otrs-centos6 otrs]# cpan
cpan[1]> look DBD::Oracle
...
Fetching with LWP:
  http://www.perl.org/CPAN/authors/id/P/PY/PYTHIAN/CHECKSUMS
Checksum for /root/.cpan/sources/authors/id/P/PY/PYTHIAN/DBD-Oracle-1.62.tar.gz ok
Scanning cache /root/.cpan/build for sizes
DONE
...
Working directory is /root/.cpan/build/DBD-Oracle-1.62-ZH6LNy
[root@localhost DBD-Oracle-1.62-ZH6LNy]# perl Makefile.PL
...
[root@localhost DBD-Oracle-1.62-ZH6LNy]# make
...
[root@localhost DBD-Oracle-1.62-ZH6LNy]# make install
...
cpan[2]> exit
Terminal does not support GetHistory.
Lockfile removed.
            ]]></screen>
        </para>

    <para>
    Now you should edit the file <filename>Kernel/Config.pm</filename> to provide ORACLE_HOME.
    The next step is to configure OTRS using the web installer, as described <link linkend="web-installer">in this section</link>.
    </para>

    </section>

</section>

<section id="installation-on-debian">
    <title>Installing OTRS on a Debian or Ubuntu system</title>
    <important>
        <para>
            Please install OTRS <link linkend="manual-installation-of-otrs">from source</link>,
            and do not use the OTRS packages that Debian/Ubuntu provides.
        </para>
    </important>
    <para>
        The installation of required Perl modules is easier if you use the available packages:
    </para>
    <para>
        <screen><![CDATA[
apt-get install libapache2-mod-perl2 libdbd-mysql-perl libtimedate-perl libnet-dns-perl libnet-ldap-perl \
    libio-socket-ssl-perl libpdf-api2-perl libdbd-mysql-perl libsoap-lite-perl libtext-csv-xs-perl \
    libjson-xs-perl libapache-dbi-perl libxml-libxml-perl libxml-libxslt-perl libyaml-perl \
    libarchive-zip-perl libcrypt-eksblowfish-perl libencode-hanextra-perl libmail-imapclient-perl \
    libtemplate-perl
        ]]></screen>
    </para>
</section>

</section>
